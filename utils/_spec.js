describe('Enter Scrolltest int he Test Box', function() {    	it('Load Home Page using URL', function() {            browser.get('http://www.way2automation.com/angularjs-protractor/banking/#/login');            browser.sleep(5000);            console.log("I am the last to execute");    		element(by.model('yourName')).sendKeys('Scrolltest');            var gg1= element(by.xpath('/html/body/div[2]/div[1]/div[2]/div[2]/div/h1'));                expect(gg1.getText()).toEqual('Hello scrolltest!');        });    it('Locators', function () {        //browser.waitForAngularEnabled(false)//if working on non Angular page        browser.get('http://juliemr.github.io/protractor-demo/');        element(by.model("first")).sendKeys("3");        element(by.model("second")).sendKeys("5");        element(by.id("gobutton")).click();        //jasmine takes care of promises        https://jasmine.github.io/2.0/introduction            expect(element(by.css("h2[class='ng-binding']")).getText()).toBe("8")        //promise setup        var a = element(by.css("h2[class='ng-binding']")).getText().then(function (text) {            console.log(text);        })        console.log(a)        /*                {                    browser.sleep(5000);                })        */    })    it('Chain Locators', function () {        browser.get('http://juliemr.github.io/protractor-demo/');        //repeaters, chain locators, css for identical tags        element(by.model("first")).sendKeys("3");        element(by.model("second")).sendKeys("5");        element(by.id("gobutton")).click();        //scope will only be in the parent        //css = tagname[attribute=value]        expect(element(by.repeater("result in memory")).element(By.css("td:nth-child(3)")).getText()).toBe("8");        element(by.repeater("result in memory")).element(By.css("td:nth-child(2)")).getText().then(function(text) {            console.log(text)        })    });    describe('All Method explained', function() {        function Add(a,b)        {            element(by.model("first")).sendKeys(a);            element(by.model("second")).sendKeys(b);            element(by.id("gobutton")).click();        }    it('All Method', function () {        browser.get('http://juliemr.github.io/protractor-demo/');        //repeaters, chain locators, css for identical tags        Add("3","5")        Add("2","8")        Add("4","7")        Add("5","8")        Add("2","6")        //scope will only be in the parent        //css = tagname[attribute=value]        element.all(by.repeater("result in memory")).count().then(function (text) {            console.log(text);        });        element.all(by.repeater("result in memory")).each(function (item) {            item.element(by.css("td:nth-child(3)")).getText().then(function (text) {                console.log(text)            })        })    })        });    describe('drop Down List explained', function() {        function Calc(a,b,c)        {            element(by.model("first")).sendKeys(a);            element(by.model("second")).sendKeys(b);            element.all(by.tagName("option")).each(function (item)            {                item.getAttribute("value").then(function (values)                {                    if(values == c)                    {                        item.click();                    }                })            });            element(by.id("gobutton")).click();        }    it('drop Down List', function () {        browser.get('http://juliemr.github.io/protractor-demo/');        //repeaters, chain locators, css for identical tags        Calc("3","5","MULTIPLICATION")        Calc("3","5","ADDITION")        Calc("3","5","DIVISION")        Calc("3","5","SUBTRACTION")    })    })    //getTitle    //getText});